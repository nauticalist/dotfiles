# NOTE: This file is automatically generated by pywal. Do not edit it by hand.
 
[global]
    # Which monitor should the notifications be displayed on.
    monitor = 0
 
    # If this option is set to mouse or keyboard, the monitor option
    # will be ignored.
    follow = mouse
 
    # Make the width 3740 (3840 - 100), have 50 left margin and 95 above
    geometry = "500x5-30+20"
 
    # Show how many messages are currently hidden (because of geometry).
    indicate_hidden = yes
 
    # Shrink window if it's smaller than the width.  Will be ignored if
   # width is 0.
   shrink = no
 
   # The transparency of the window.  Range: [0; 100].
   # This option will only work if a compositing window manager is
   # present (e.g. xcompmgr, compiz, etc.).
   transparency = 20
 
   # The height of the entire notification.  If the height is smaller
   # than the font height and padding combined, it will be raised
   # to the font height and padding.
   notification_height = 0
 
   # Draw a line of "separator_height" pixel height between two
   # notifications.
   # Set to 0 to disable.
   separator_height = 2
 
   # Padding between text and separator.
   padding = 8
 
   # Horizontal padding.
   horizontal_padding = 8
 
   # Defines width in pixels of frame around the notification window.
   # Set to 0 to disable.
   frame_width = 4
 
   # The frame color and width of the notification
   frame_color = "#34839d"
 
   # How long a user needs to be idle for sticky notifications
   idle_threshold = 120
 
   # Sort messages by urgency.
   sort = yes
 
   # Font and typography settings
   alignment = left
   word_wrap = yes
   font = DejaVu Sans Mono 14
 
   # Format for how notifications will be displayed
   # Usage: `notify-send 'Title' 'Summary'`
   format = "<b>%s</b>: %b"
 
   # Allow some HTML tags like <i> and <u> in notifications
   markup = full
 
   # The format of the message.  Possible variables are:
   #   %a  appname
   #   %s  summary
   #   %b  body
   #   %i  iconname (including its path)
   #   %I  iconname (without its path)
   #   %p  progress value if set ([  0%] to [100%]) or nothing
   #   %n  progress value if set without any extra characters
   #   %%  Literal %
   # Markup is allowed
   format = "<b>%s</b>\n%b"
 
   # Alignment of message text.
   # Possible values are "left", "center" and "right".
   alignment = left
 
   # Show age of message if message is older than show_age_threshold
   # seconds.
   # Set to -1 to disable.
   show_age_threshold = 60
 
   # Split notifications into multiple lines if they don't fit into
    # geometry.
    word_wrap = yes
 
    # When word_wrap is set to no, specify where to ellipsize long lines.
    # Possible values are "start", "middle" and "end".
    ellipsize = middle
 
    # Ignore newlines '\n' in notifications.
    ignore_newline = no
 
    # Merge multiple notifications with the same content
    stack_duplicates = true
 
    # Hide the count of merged notifications with the same content
    hide_duplicate_count = false
 
    # Display indicators for URLs (U) and actions (A).
    show_indicators = yes
 
    ### Icons ###
 
    # Align icons left/right/off
    icon_position = left
 
    # Scale larger icons down to this size, set to 0 to disable
    max_icon_size = 32
 
    # Paths to default icons.
    icon_path = /usr/share/icons/gnome/32x32/status/:/usr/share/icons/gnome/32x32/devices/
 
    ### History ###
 
    # Should a notification popped up from history be sticky or timeout
    # as if it would normally do.
    sticky_history = yes
 
    # Maximum amount of notifications kept in history
    history_length = 20
 
    ### Misc/Advanced ###
 
    # dmenu path.
    dmenu = /usr/bin/dmenu -p dunst:
 
    # Browser for opening urls in context menu.
    browser = /usr/bin/firefox -new-tab
 
    # Always run rule-defined scripts, even if the notification is suppressed
    always_run_script = true
 
    # Define the title of the windows spawned by dunst
    title = Dunst
 
    # Define the class of the windows spawned by dunst
    class = Dunst
 
    # Print a notification on startup.
    # This is mainly for error detection, since dbus (re-)starts dunst
    # automatically after a crash.
    startup_notification = true
 
    ### Legacy
 
    # Use the Xinerama extension instead of RandR for multi-monitor support.
    # This setting is provided for compatibility with older nVidia drivers that
    # do not support RandR and using it on systems that support RandR is highly
    # discouraged.
    #
    # By enabling this setting dunst will not be able to detect when a monitor
    # is connected or disconnected which might break follow mode if the screen
    # layout changes.
    force_xinerama = false
 
 
# These are the keybindings used to control dunst notifications
[shortcuts]
    close = ctrl+space
    close_all = ctrl+shift+space
    history = ctrl+grave
 
# Set the background and foreground (text) color for all notifications
[urgency_low]
    background = "#011016"
    foreground = "#b1ced9"
    timeout = 10
    # Icon for notifications with low urgency, uncomment to enable
    icon = /usr/share/icons/gnome/32x32/status/info.png
 
[urgency_normal]
    background = "#011016"
    foreground = "#b1ced9"
    timeout = 10
    # Icon for notifications with normal urgency, uncomment to enable
    icon =  /usr/share/icons/gnome/32x32/status/starred.png
 
[urgency_critical]
    background = "#011016"
    foreground = "#b1ced9"
    timeout = 0
    # Icon for notifications with critical urgency, uncomment to enable
    icon =  /usr/share/icons/gnome/32x32/status/important.png
 
# vim:ft=cfg# NOTE: This file is automatically generated by pywal. Do not edit it by hand.
